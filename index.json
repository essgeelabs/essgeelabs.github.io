[{"content":"In getting this website up and running I wanted a way to simplify updating the site from the command line to open opportunities for automation.\nFor this I wanted to be able to use Git to be able to mock up a website and then push the changes to the webhost once I was satisfied. So I was pleasantly surprised to find out that cPanel supports the use of Git repositories to do just that.\ncPanel is a web application that many web hosting providers use to allow customers to self-manage the backend of their websites.\nAll my examples here is based on Bluehost, who I use as my webhost. I\u0026rsquo;m also using Windows 10 but the techniques will work with other OSes.\nTo begin This is not a newbie tutorial. You should be comfortable with the command-line and understand how web server and web hosting works.\nYou should have Git installed. You can download from the Git website.\nYou can use any web editing tool that you would like. Remember that this would be a static website as compared to a dynamic website. I use Visual Studio Code for most of my editing needs.\nYou\u0026rsquo;ll need SSH key pairs. Generate them if you don\u0026rsquo;t already have one.\nAnd of course you need a web host that use cPanel with Git Version Control and a domain attached. I\u0026rsquo;m using an addon domain, but this will work for the main domain as well.\nAdd your SSH public key to the web host Log into your web host and in cPanel go to Security, and click on SSH Access. (In Bluehost you have to go to Advanced first.)\nClick on \u0026ldquo;Manage SSH Keys\u0026rdquo;\nThen click on \u0026ldquo;Import Key\u0026rdquo;.\nSpecify a name for the key and paste in the public key only. Then click on \u0026ldquo;Import\u0026rdquo;. Note that I can share my public key without fear of being compromised, which is the advantage of public-private key pairs.\nYou should see the new key in the \u0026ldquo;Public Keys\u0026rdquo; list. Click on \u0026ldquo;Manage\u0026rdquo; in the line with the key.\nNow click on \u0026ldquo;Authorize\u0026rdquo;. You should get a message saying that they key has been authorised.\nWhen you go back to the Public Key list you should see the \u0026ldquo;Authorization Status\u0026rdquo; of the key as \u0026ldquo;authorized\u0026rdquo;.\nCreate your Git Repository to cPanel Back to cPanel, go to \u0026ldquo;Files\u0026rdquo; and \u0026ldquo;Git Version Control\u0026rdquo;.\nWe\u0026rsquo;ll be creating a new repository. Click \u0026ldquo;Create\u0026rdquo;.\nIn the \u0026ldquo;Create Repository\u0026rdquo; window, disable the \u0026ldquo;Clone a Repository\u0026rdquo; toggle. This is only if you have an existing website hosted in another Git repository such as GitHub. We will be creating an empty repository.\nEnter the repository path. I created a folder for my repositories, and you should do the same. This is not the folder that is used to store your web pages (usually the ~/public_html or ~/www folders). You\u0026rsquo;ll see how to get the files in the correct location after.\nEnter a name for the repository.\nThen click on \u0026ldquo;Create\u0026rdquo;.\nYou should see a message that it was created successfully along with some instructions to add the repository to an existing project, or to clone the repository and build a new project. Copy and save these instructions.\nYour repository should now be listed into your list of repositories.\nEdit the SSH config Since the cPanel Git uses SSH to access the repository, you need to edit the SSH config file to point to your SSH private key file.\nGo to your home folder.\nIn Windows it\u0026rsquo;ll be something like:\nC:\\Users\\\u0026lt;username\u0026gt;\\\nIn Linux it\u0026rsquo;ll be:\n\\home\\\u0026lt;username\u0026gt;\\ or just ~\\\nYou\u0026rsquo;ll see a .ssh folder, if not, create it. Edit or create a text file named \u0026ldquo;config\u0026rdquo; with no extension (no .txt or anything).\nAdd the following to the file:\nHost \u0026lt;domain name\u0026gt;\rHostKeyAlgorithms +ssh-rsa\rPubkeyAcceptedKeyTypes +ssh-rsa\rUser \u0026lt;username to access web host\u0026gt;\rIdentityFile \u0026#34;\u0026lt;full path to private key e.g. c:\\keys\\private.key\u0026#34;\rPort 22 Save and close.\nClone the Git repository to your local computer Once you have Git installed, you can clone the repository to your local computer. In this example we\u0026rsquo;re cloning and not using an existing copy of a web site.\nYou can copy the Clone URL from the cPanel Git Version Control list.\nOpen a command or PowerShell prompt and navigate to the place where you would like to clone the repository.\nPS C:\\Users\\sganpat\\Website\u0026gt; git clone ssh://\u0026lt;username\u0026gt;@essgeelabs.net/home/essgeelab/repositories/essgeelab.net\rCloning into \u0026#39;essgeelab.net\u0026#39;...\rwarning: You appear to have cloned an empty repository. cd essgeeglab.net Create a Readme file to do an initial commit and push.\necho \u0026#34;# Readme\u0026#34; \u0026gt;\u0026gt; README.md\rgit add README.md\rgit commit -m \u0026#34;initial commit\u0026#34;\rgit push -u origin master You should get output like:\nEnumerating objects: 3, done.\rCounting objects: 100% (3/3), done.\rWriting objects: 100% (3/3), 216 bytes | 108.00 KiB/s, done.\rTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\rremote: Recieved update on checked-out branch, queueing deployment.\rremote: ---\rremote: apiversion: 3\rremote: func: create\rremote: module: VersionControlDeployment\rremote: result:\rremote: data: ~\rremote: errors: ~\rremote: messages: ~\rremote: metadata: {}\rremote:\rremote: status: 1\rremote: warnings: ~\rTo ssh://essgeelabs.net/home/essgeelab/repositories/essgeelab.net\r\\* [new branch] master -\u0026gt; master Great. All is setup to now push your website.\nCreate a small web page and deploy Create a simple static web page and associated files such as stylesheets and images and add them to the repository. For this example I\u0026rsquo;m using a simple page (download).\nPS C:\\Users\\sganpat\\Website\\essgeelab.net\u0026gt; git status\rOn branch master\rYour branch is up to date with \u0026#39;origin/master\u0026#39;.\rUntracked files:\r(use \u0026#34;git add \u0026lt;file\u0026gt;...\u0026#34; to include in what will be committed)\rimages/\rindex.html\rstyle.css\rnothing added to commit but untracked files present (use \u0026#34;git add\u0026#34; to track)\rPS C:\\Users\\sganpat\\Website\\essgeelab.net\u0026gt; git add *\rPS C:\\Users\\sganpat\\Website\\essgeelab.net\u0026gt; git commit -m \u0026#34;simple website\u0026#34;\r[master 5498e9e] simple website\r4 files changed, 197 insertions(+)\rcreate mode 100644 images/egllogo.png\rcreate mode 100644 images/twitter.png\rcreate mode 100644 index.html\rcreate mode 100644 style.css\rPS C:\\Users\\sganpat\\Website\\essgeelab.net\u0026gt; git push origin master\rEnumerating objects: 8, done.\rCounting objects: 100% (8/8), done.\rDelta compression using up to 8 threads\rCompressing objects: 100% (7/7), done.\rWriting objects: 100% (7/7), 15.86 KiB | 3.96 MiB/s, done.\rTotal 7 (delta 0), reused 0 (delta 0), pack-reused 0\rremote: Recieved update on checked-out branch, queueing deployment.\rremote: ---\rremote: apiversion: 3\rremote: func: create\rremote: module: VersionControlDeployment\rremote: result:\rremote: data: ~\rremote: errors: ~\rremote: messages: ~\rremote: metadata: {}\rremote:\rremote: status: 1\rremote: warnings: ~\rTo ssh://essgeelabs.net/home/essgeelab/repositories/essgeelab.net\rb295c0c..5498e9e master -\u0026gt; master Great, you\u0026rsquo;ve added the site to the repository. But when you browse to the URL it doesn\u0026rsquo;t work. That\u0026rsquo;s because it needs to be deployed. To do this, you need to create a text file called .cpanel.yml and add your deploy tasks in there. These are the bash commands you would run to deploy the site from the repository folder.\nFor instance, in my case it would be to copy the index.html and style.css files and the images folder to the root directory of the web server. So my .cpanel.yml file will look like:\n---\rdeployment:\rtasks:\r- export DEPLOYPATH=/home/essgeelab/public_html/essgeelabs.net/\r- /bin/cp index.html $DEPLOYPATH\r- /bin/cp style.css $DEPLOYPATH\r- /bin/cp -R images $DEPLOYPATH now commit that file and push to the remote respository.\ngit add .cpanel.yml\rgit commit -m \u0026#34;cpanel deploy file\u0026#34;\rgit push origin master Now the website should be operational.\n","permalink":"https://essgeelabs.com/posts/cpanel-git-1/","summary":"Configuing cPanel Git Versioning for Web Site deployment","title":"Using Git with cPanel to update your website"},{"content":"Welcome I\u0026rsquo;ve been meaning to put up a website like this for a really long time, but never got around to doing it. While I have by personal and business website, I\u0026rsquo;ve never put up a technical one.\nThe truth is that even with over two decades of experience, I still feel that what I have to offer is not enough. That whatever I say is going to sound stupid or is not valuable. Which is weird because I know many people value my input in things.\nImposter syndrome is a heck of a thing.\nWhat to expect At the home page says, I\u0026rsquo;m using this site to document some of the things that I\u0026rsquo;m learning and experimenting with. I\u0026rsquo;ll also add information that I\u0026rsquo;ve found useful in my day-to-day activities as a network and infrastructure engineer/manager.\nTopics in my head:\n - DevOps, DevSecOps and CyberSecurity\n - Network and Infrastructure Architectures\n - Machine Learning and Intelligence Augmentation\n - Electronics and The Internet of Things\n - Web Development and Programming in Python\nI expect this to be very broad and varied so the SEO might be shit. But I hope it helps someone.\nWhy put up this site? The main aim of the site is to share my knowledge and help others who are trying to do the same thing I am doing.\nBut why do this when there are tons of sites out there doing the same?\nBecause if you\u0026rsquo;re like me, you\u0026rsquo;ve found that even going through those sites don\u0026rsquo;t help all the time and you end up figuring out things on your own or by putting the pieces together. Here I hope you find all the pieces in one place.\nBut more so, I want to hold myself accountable in actually doing the things I put in the list.\nI hope you enjoy the journey with me. Reach out to me via my social handles\n","permalink":"https://essgeelabs.com/posts/first-post/","summary":"Welcome I\u0026rsquo;ve been meaning to put up a website like this for a really long time, but never got around to doing it. While I have by personal and business website, I\u0026rsquo;ve never put up a technical one.\nThe truth is that even with over two decades of experience, I still feel that what I have to offer is not enough. That whatever I say is going to sound stupid or is not valuable.","title":"First Post"},{"content":"This is a little about me.\n","permalink":"https://essgeelabs.com/about/","summary":"This is a little about me.","title":"About"}]